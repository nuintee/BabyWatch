<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>BabyWatch</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1" crossorigin="anonymous">
    <link href="manifest.json" crossorigin= "use-credentials" rel="manifest" >
    <script async src="https://cdn.jsdelivr.net/npm/pwacompat" crossorigin="anonymous"></script>
</head>
<body  class = "v-100">
    <div class = "drawer">
        <header class="p-3">
            <button onclick="drawer()" class="btn btn-dark">ホーム</button>
        </header>
        <hr class="m-0">
        <table class = "table table-striped">
            <thead>
                <tr>
                    <th scope="col">#</th>
                    <th scope="col">誰が</th>
                    <th scope="col">いつ</th>
                    <th scope="col">何をした</th>
                    <th scope="col">どのくらい？(任意)</th>
                </tr>
            </thead>
            <tbody>
                <%# 最新のものから表示 %>
                <%for (let i = data.length - 1; i >= 0; i--)  {%>
                <tr>
                    <th scope="row"><%= i + 1 %></th>
                    <td><%= data[i].who%></td>
                    <td><%= data[i].when%></td>
                    <td><%= data[i].what%></td>
                    <td>
                        <% if (data[i].what == 'ミルク') { %>
                        <%=     data[i].portion%><small>ml</small>
                        <% };%>
                    </td>
                </tr>
                <%} %> 
            </tbody>
        </table>
    </div>
    <header class="p-3 m-0">
        <button onclick="drawer()" class="btn btn-dark"> データ </button>
    </header>
    <hr class="m-0">
    <form action = "/api" method = "POST"  onsubmit="return check(this)" class = "d-flex align-items-center justify-content-between flex-column h-100 p-3">
        <input type = "submit" class = "btn btn-primary actionBtns" name = "what" value = "ミルク" >
        <% let milkIndex = data.reverse().find((item) => item.what == 'ミルク') %>
        <% if (milkIndex) { %>
            <!-- Dummy Value Holder -->
            <div style="display: none;" class="latestTarget"><%= milkIndex.when %></div>
            <h6 class = "latestDisplay" id = "latestMilk">-分前</h6>
        <% } else { %>
            <%= "まだデータがありません" %>
        <% } %>
        <input id = "milkPortion" type = "number" min = "0" value = "20" step="5" name = "portion">
        <input type= "submit" class = "btn btn-secondary actionBtns" name = "what" value= "オムツ">
        <% let diaperIndex = data.find((item) => item.what == 'オムツ') %>
        <% if (diaperIndex) { %>
            <!-- Dummy Value Holder -->
            <div style="display: none;" class="latestTarget"><%= diaperIndex.when %></div>
            <h6 class = "latestDisplay" id = "latestDiaper">-分前</h6>
        <% } else { %>
        <%= "まだデータがありません"　 %>
        <% } %>
        <div>
            <select class="custom-select" id="form-select" name = "who">
                <option value="Sho" name = "Sho">Sho</option>
                <option value="Non" name = "Non">Non</option>
            </select>
        </div>
    </form>
    <button onclick="emi()">Emit</button>
    <style>

        .drawer {
            position: absolute;
            top:0;
            left:-100%;
            background-color: #FFF;
            transition-duration: 0.5s;
            height:100%;
            width:100%;
            margin:0;
            z-index: 100;
        }

        .drawer.on{
            transition-duration: 0.5s;
            left:0%;
        }
    </style>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        //socket io
        let socket = io()

        function emi(){
            socket.emit('alerting',{value : "data"})
        }

        socket.on('reload page',(msg) => {
            alert('hey')
        })
        

        if ('serviceWorker' in navigator) {
            navigator.serviceWorker.register('sw.js').then(async (registration) => {
                console.log('ServiceWorker registration successful with scope: ', registration.scope);
            }).catch((err) => {
                console.log('ServiceWorker registration failed: ', err);
            });
        }

        let time;
        const actionBtns = document.getElementsByClassName('actionBtns');
        const latestTarget = document.getElementsByClassName('latestTarget');
        const latestDisp = document.getElementsByClassName('latestDisplay');
        let pressedBtn;
        let whoisTarget


        // 前回の担当者をデフォルト選択　-->
        if (localStorage){
            if (!localStorage.getItem('whois')){
                console.log('Empty Storage')
            } else {
                whoisTarget = Number(localStorage.getItem('whois'))
                let whoTarget = document.getElementById('form-select')
                whoTarget[whoisTarget].selected = true
                 // 選択切り替え時に担当者設定　-->
                whoTarget.addEventListener('change',function(){
                    let whoWas = whoTarget.selectedIndex
                    localStorage.setItem("whois",whoWas)
                },false);
            // <--
            }
        }
        else {
            console.log('localStorage unavailable!')
        }

        //Time Update -->
        let timeUpdate = () => {
            time = new Date()
            for (let i = 0; i < latestTarget.length; i++){
                let oldDate = new Date(latestTarget[i].innerText)
                let oldHour = oldDate.getHours();
                oldDate.setHours(oldHour - 9)
                latestDisp[i].innerText = `${Math.round((time - oldDate) / 60000)}分前`
            }
        }
        setInterval(timeUpdate,1000)
        // <--


        for (let i = 0; i < actionBtns.length; i++){
            actionBtns[i].addEventListener('click',function(e){
                pressedBtn = e.target.value
            },false)
        }


        function drawer(){
            let drawerTarget = document.getElementsByClassName('drawer')[0];

            drawerTarget.classList.toggle('on')
        }


        function check(e){

            let whoTarget = document.getElementById('form-select')
            let whoIndex = whoTarget.selectedIndex
            let who = whoTarget[whoIndex].value

            let portion = document.getElementById('milkPortion');
            let question;

            if (pressedBtn == 'ミルク'){
                question = `${who}さんが${pressedBtn}を${portion.value}mlあげました`;
            }
            else if (pressedBtn == 'オムツ'){
                question = `${who}さんが${pressedBtn}を交換しました`;
            }
            let answer = confirm(question);

            if (answer == false){ 
                return false
            }
            else {
                //socket.emit('updated db', answer);
                return true
            }
        }

    </script>
</body>
</html>